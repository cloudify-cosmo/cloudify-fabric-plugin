version: 2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

jobs:
  flake8:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run: pip install flake8 --user
      - run:
          name: Run flake8
          command: flake8 fabric_plugin

  unittests:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            pip install --user -r test-requirements.txt
            pip install --user .
      - run:
          name: run unittests
          command: |
            ~/.local/bin/pytest \
               --cov fabric_plugin --cov-report term-missing \
              --junitxml=test-results/fabric_plugin.xml \
              fabric_plugin/tests
      - store_test_results:
          path: test-results

  wagon:
    docker:
      - image: amd64/centos:centos7.3.1611
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yum -y install python-devel gcc openssl git libxslt-devel libxml2-devel openldap-devel libffi-devel openssl-devel libvirt-devel
      - run:
          name: Download pip
          command: curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
      - run:
          name: Install pip
          command: python get-pip.py
      - run:
          name: Upgrade pip
          command: pip install --upgrade pip==9.0.1
      - run:
          name: Install virtualenv
          command: pip install virtualenv==15.1.0
      - run:
          name: Init virtualenv
          command: virtualenv env
      - run:
          name: Install wagon
          command: pip install wagon==0.3.2
      - run:
          name: many_linux
          command: echo "manylinux1_compatible = False" > "env/bin/_manylinux.py"
      - run:
          name: make workspace
          command: mkdir -p workspace/build
      - run:
          name: Create wagon
          command: source env/bin/activate && wagon create -s . -v -o workspace/build -f -a '--no-cache-dir -c constraints.txt'
      - persist_to_workspace:
          root: workspace
          paths:
            - build/*

workflows:
  version: 2
  tests:
    jobs:
      - flake8
      - unittests
      - wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
